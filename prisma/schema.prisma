// Prisma schema for RAG Open Source

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Website {
  id          String           @id @default(cuid())
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  url         String
  title       String
  description String?
  status      String           @default("pending") // pending, processing, completed, failed
  chunks      WebsiteChunk[]
  chats       WebsiteChat[]

  @@map("websites")
}

model WebsiteChunk {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  websiteId String
  content   String
  embedding String   // JSON array of embedding vector
  metadata  String   @default("{}") // JSON object with page URL, heading, etc.
  website   Website  @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@index([websiteId])
  @@map("website_chunks")
}

model WebsiteChat {
  id        String               @id @default(cuid())
  createdAt DateTime             @default(now())
  websiteId String
  title     String               @default("New Chat")
  messages  WebsiteChatMessage[]
  website   Website              @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@index([websiteId])
  @@map("website_chats")
}

model WebsiteChatMessage {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  chatId    String
  role      String      // user, assistant, system
  content   String
  chat      WebsiteChat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([chatId])
  @@map("website_chat_messages")
}
